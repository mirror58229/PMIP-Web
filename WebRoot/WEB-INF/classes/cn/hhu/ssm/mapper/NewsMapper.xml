<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hhu.ssm.mapper.NewsMapper" >
  <resultMap id="BaseResultMap" type="cn.hhu.ssm.pojo.News" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="newstitle" property="newstitle" jdbcType="VARCHAR" />
    <result column="newscontent" property="newscontent" jdbcType="VARCHAR" />
    <result column="newstime" property="newstime" jdbcType="TIMESTAMP" />
    <result column="newsstate" property="newsstate" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, newstitle, newscontent, newstime, newsstate, student_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.hhu.ssm.pojo.NewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from news
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from news
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hhu.ssm.pojo.NewsExample" >
    delete from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hhu.ssm.pojo.News" >
    insert into news (id, newstitle, newscontent, 
      newstime, newsstate, student_id
      )
    values (#{id,jdbcType=INTEGER}, #{newstitle,jdbcType=VARCHAR}, #{newscontent,jdbcType=VARCHAR}, 
      #{newstime,jdbcType=TIMESTAMP}, #{newsstate,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.hhu.ssm.pojo.News" >
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="newstitle != null" >
        newstitle,
      </if>
      <if test="newscontent != null" >
        newscontent,
      </if>
      <if test="newstime != null" >
        newstime,
      </if>
      <if test="newsstate != null" >
        newsstate,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="newstitle != null" >
        #{newstitle,jdbcType=VARCHAR},
      </if>
      <if test="newscontent != null" >
        #{newscontent,jdbcType=VARCHAR},
      </if>
      <if test="newstime != null" >
        #{newstime,jdbcType=TIMESTAMP},
      </if>
      <if test="newsstate != null" >
        #{newsstate,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hhu.ssm.pojo.NewsExample" resultType="java.lang.Integer" >
    select count(*) from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update news
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.newstitle != null" >
        newstitle = #{record.newstitle,jdbcType=VARCHAR},
      </if>
      <if test="record.newscontent != null" >
        newscontent = #{record.newscontent,jdbcType=VARCHAR},
      </if>
      <if test="record.newstime != null" >
        newstime = #{record.newstime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.newsstate != null" >
        newsstate = #{record.newsstate,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update news
    set id = #{record.id,jdbcType=INTEGER},
      newstitle = #{record.newstitle,jdbcType=VARCHAR},
      newscontent = #{record.newscontent,jdbcType=VARCHAR},
      newstime = #{record.newstime,jdbcType=TIMESTAMP},
      newsstate = #{record.newsstate,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hhu.ssm.pojo.News" >
    update news
    <set >
      <if test="newstitle != null" >
        newstitle = #{newstitle,jdbcType=VARCHAR},
      </if>
      <if test="newscontent != null" >
        newscontent = #{newscontent,jdbcType=VARCHAR},
      </if>
      <if test="newstime != null" >
        newstime = #{newstime,jdbcType=TIMESTAMP},
      </if>
      <if test="newsstate != null" >
        newsstate = #{newsstate,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hhu.ssm.pojo.News" >
    update news
    set newstitle = #{newstitle,jdbcType=VARCHAR},
      newscontent = #{newscontent,jdbcType=VARCHAR},
      newstime = #{newstime,jdbcType=TIMESTAMP},
      newsstate = #{newsstate,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 根据外键的student_id查询消息记录 -->
  <select id="selectNewsByStudent_Id" parameterType="java.lang.Integer" resultType="cn.hhu.ssm.pojo.News">
     select * from news where student_id=#{student_id}
  </select>
  <!-- 根据student_id修改消息记录 -->
  <update id="editNews" parameterType="cn.hhu.ssm.pojo.News">
      update news set newsstate=#{newsstate} where id=#{id}
  </update>
</mapper>