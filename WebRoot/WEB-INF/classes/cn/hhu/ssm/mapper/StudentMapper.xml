<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hhu.ssm.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="cn.hhu.ssm.pojo.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentname" property="studentname" jdbcType="VARCHAR" />
    <result column="studentnumber" property="studentnumber" jdbcType="CHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="studentclass" property="studentclass" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="indirectingtime" property="indirectingtime" jdbcType="DATE" />
    <result column="activisttime" property="activisttime" jdbcType="DATE" />
    <result column="developementtime" property="developementtime" jdbcType="DATE" />
    <result column="probationarytime" property="probationarytime" jdbcType="DATE" />
    <result column="fullmembertime" property="fullmembertime" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, studentname, studentnumber, sex, password, studentclass, email, state, indirectingtime, 
    activisttime, developementtime, probationarytime, fullmembertime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.hhu.ssm.pojo.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hhu.ssm.pojo.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hhu.ssm.pojo.Student" >
    insert into student (id, studentname, studentnumber, 
      sex, password, studentclass, 
      email, state, indirectingtime, 
      activisttime, developementtime, probationarytime, 
      fullmembertime)
    values (#{id,jdbcType=INTEGER}, #{studentname,jdbcType=VARCHAR}, #{studentnumber,jdbcType=CHAR}, 
      #{sex,jdbcType=CHAR}, #{password,jdbcType=VARCHAR}, #{studentclass,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{indirectingtime,jdbcType=DATE}, 
      #{activisttime,jdbcType=DATE}, #{developementtime,jdbcType=DATE}, #{probationarytime,jdbcType=DATE}, 
      #{fullmembertime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="cn.hhu.ssm.pojo.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentname != null" >
        studentname,
      </if>
      <if test="studentnumber != null" >
        studentnumber,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="studentclass != null" >
        studentclass,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="indirectingtime != null" >
        indirectingtime,
      </if>
      <if test="activisttime != null" >
        activisttime,
      </if>
      <if test="developementtime != null" >
        developementtime,
      </if>
      <if test="probationarytime != null" >
        probationarytime,
      </if>
      <if test="fullmembertime != null" >
        fullmembertime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentname != null" >
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="studentnumber != null" >
        #{studentnumber,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentclass != null" >
        #{studentclass,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="indirectingtime != null" >
        #{indirectingtime,jdbcType=DATE},
      </if>
      <if test="activisttime != null" >
        #{activisttime,jdbcType=DATE},
      </if>
      <if test="developementtime != null" >
        #{developementtime,jdbcType=DATE},
      </if>
      <if test="probationarytime != null" >
        #{probationarytime,jdbcType=DATE},
      </if>
      <if test="fullmembertime != null" >
        #{fullmembertime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hhu.ssm.pojo.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentname != null" >
        studentname = #{record.studentname,jdbcType=VARCHAR},
      </if>
      <if test="record.studentnumber != null" >
        studentnumber = #{record.studentnumber,jdbcType=CHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.studentclass != null" >
        studentclass = #{record.studentclass,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.indirectingtime != null" >
        indirectingtime = #{record.indirectingtime,jdbcType=DATE},
      </if>
      <if test="record.activisttime != null" >
        activisttime = #{record.activisttime,jdbcType=DATE},
      </if>
      <if test="record.developementtime != null" >
        developementtime = #{record.developementtime,jdbcType=DATE},
      </if>
      <if test="record.probationarytime != null" >
        probationarytime = #{record.probationarytime,jdbcType=DATE},
      </if>
      <if test="record.fullmembertime != null" >
        fullmembertime = #{record.fullmembertime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set id = #{record.id,jdbcType=INTEGER},
      studentname = #{record.studentname,jdbcType=VARCHAR},
      studentnumber = #{record.studentnumber,jdbcType=CHAR},
      sex = #{record.sex,jdbcType=CHAR},
      password = #{record.password,jdbcType=VARCHAR},
      studentclass = #{record.studentclass,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      indirectingtime = #{record.indirectingtime,jdbcType=DATE},
      activisttime = #{record.activisttime,jdbcType=DATE},
      developementtime = #{record.developementtime,jdbcType=DATE},
      probationarytime = #{record.probationarytime,jdbcType=DATE},
      fullmembertime = #{record.fullmembertime,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hhu.ssm.pojo.Student" >
    update student
    <set >
      <if test="studentname != null" >
        studentname = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="studentnumber != null" >
        studentnumber = #{studentnumber,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentclass != null" >
        studentclass = #{studentclass,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="indirectingtime != null" >
        indirectingtime = #{indirectingtime,jdbcType=DATE},
      </if>
      <if test="activisttime != null" >
        activisttime = #{activisttime,jdbcType=DATE},
      </if>
      <if test="developementtime != null" >
        developementtime = #{developementtime,jdbcType=DATE},
      </if>
      <if test="probationarytime != null" >
        probationarytime = #{probationarytime,jdbcType=DATE},
      </if>
      <if test="fullmembertime != null" >
        fullmembertime = #{fullmembertime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hhu.ssm.pojo.Student" >
    update student
    set studentname = #{studentname,jdbcType=VARCHAR},
      studentnumber = #{studentnumber,jdbcType=CHAR},
      sex = #{sex,jdbcType=CHAR},
      password = #{password,jdbcType=VARCHAR},
      studentclass = #{studentclass,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      indirectingtime = #{indirectingtime,jdbcType=DATE},
      activisttime = #{activisttime,jdbcType=DATE},
      developementtime = #{developementtime,jdbcType=DATE},
      probationarytime = #{probationarytime,jdbcType=DATE},
      fullmembertime = #{fullmembertime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 根据用户名密码查询用户 -->
  <select id="isExit" parameterType="cn.hhu.ssm.pojo.Student" resultType="cn.hhu.ssm.pojo.Student">
     select * from student where studentname=#{studentname} and password=#{password}
  </select>
  <!-- 根据用户名学号查询用户 -->
  <select id="selectStuByNameNum" parameterType="cn.hhu.ssm.pojo.Student" resultType="cn.hhu.ssm.pojo.Student">
     select * from student where studentname=#{studentname} and studentnumber=#{studentnumber}
  </select>
  <!-- 根据id修改密码 -->
  <update id="modifyPassword" parameterType="cn.hhu.ssm.pojo.Student">
     update student set password=#{password} where id=#{id}
  </update>
  <!-- 查询所有的学生信息 -->
  <select id="selectAllStudent" resultType="cn.hhu.ssm.pojo.Student">
     select * from student
  </select>
  <!-- 按照专业查班级 -->
  <select id="selectByStudentClas" parameterType="cn.hhu.ssm.pojo.Student" resultType="cn.hhu.ssm.pojo.Student">
     select * from student where studentclass=#{studentclass} 
  </select>
  <!-- 修改学生信息  -->
  <update id="insertEmail" parameterType="cn.hhu.ssm.pojo.Student">
      update student set email=#{email} where id=#{id}
  </update>
</mapper>